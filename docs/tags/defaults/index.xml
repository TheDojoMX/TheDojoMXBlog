<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Defaults on The Dojo MX Blog</title>
    <link>https://blog.thedojo.mx/tags/defaults/</link>
    <description>Recent content in Defaults on The Dojo MX Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>© 2025 </copyright>
    <lastBuildDate>Wed, 18 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.thedojo.mx/tags/defaults/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A Philosophy of Software Design: Recomendaciones de diseño modular</title>
      <link>https://blog.thedojo.mx/2020/03/18/a-philosophy-of-software-design-recomendaciones-de-dise%C3%B1o-modular/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.thedojo.mx/2020/03/18/a-philosophy-of-software-design-recomendaciones-de-dise%C3%B1o-modular/</guid>
      <description>&lt;p&gt;En los artículos anteriores hemos estado hablando de cómo evitar la complejidad mediante ocultar información.&lt;/p&gt;
&lt;p&gt;En este daremos algunas recomendaciones más y hablaremos de cómo no llevar este principio al extremo.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
