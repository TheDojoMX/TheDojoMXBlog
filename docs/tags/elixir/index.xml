<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elixir on The Dojo MX Blog</title><link>https://blog.thedojo.mx/tags/elixir/</link><description>Recent content in Elixir on The Dojo MX Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sun, 02 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.thedojo.mx/tags/elixir/index.xml" rel="self" type="application/rss+xml"/><item><title>¿Por qué deberías aprender Elixir?</title><link>https://blog.thedojo.mx/2019/06/02/por-qu%C3%A9-deber%C3%ADas-aprender-elixir/</link><pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2019/06/02/por-qu%C3%A9-deber%C3%ADas-aprender-elixir/</guid><description>TL;DR ¿Por qué deberías considerar aprender Elixir? La respuesta fácil la encuentras en el siguiente gráfica y la plática de la que salió:
{: .align-center}
Este registro visual salió de esta plática:
Agradecemos a @loreniuxmr por la plática y a @alebricio por el registro visual, así como a Hack Tabasco por la organización.
¿Todavía no te convences? Entonces hablemos más profundamente. Elixir es un lenguaje de programación reciente (creado cerca de 2012), pero que está haciendo mucho ruido, aunque considerando que no tiene ninguno de los nombres legendarios del área de sistemas atrás ni a alguna empresa prominente.</description></item><item><title>La diferencia entre concurrencia y paralelismo</title><link>https://blog.thedojo.mx/2019/04/17/la-diferencia-entre-concurrencia-y-paralelismo/</link><pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2019/04/17/la-diferencia-entre-concurrencia-y-paralelismo/</guid><description>Los términos concurrencia y paralelismo siempre han sido relevantes en el entorno de la computación y desarrollo de software. Hablemos de la diferencia entre ellos y cómo podemos aplicarlos en nuestros programas. Son conceptos relacionados, pero decir que uno es el otro es como decir que las naranjas y manzanas son iguales.
Empecemos por el concepto más sencillo: el paralelismo.
Paralelismo Se refiere a la ejecución simultánea de varios procesos computacionales.</description></item><item><title>Los mejores recursos para aprender programación funcional</title><link>https://blog.thedojo.mx/2019/04/06/los-mejores-recursos-para-aprender-programaci%C3%B3n-funcional/</link><pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2019/04/06/los-mejores-recursos-para-aprender-programaci%C3%B3n-funcional/</guid><description>En el articulo anterior hablamos de la programación funcional y por qué es importante. En este te daremos algunos recursos para que puedas iniciarte en ella.
Empezando ligero Empecemos con algunos recursos para entenderla y apreciarla mejor.
Russ Olsen tiene una plática en la que explica las bases y características principales de la programación funcional en 40 minutos de manera concisa y entretenida.
Las bases ¿Quieres aprender un poco de las bases de la programación funcional?</description></item><item><title>¿Qué es la programación funcional?</title><link>https://blog.thedojo.mx/2019/03/30/qu%C3%A9-es-la-programaci%C3%B3n-funcional/</link><pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2019/03/30/qu%C3%A9-es-la-programaci%C3%B3n-funcional/</guid><description>En los últimos años ha estado cobrando relevancia (de nuevo) la programación funcional. ¿Qué diferencias tiene con los estilos más usados? En este artículo hablaremos de sus dos caracterísitcas más distintivas y el tipo de programas que se pueden crear con ella.
Definición Se puede definir la programación funcional así:
Estilo de programación en el que se usan principalmente funciones puras y valores inmutables. En los lenguajes funcionales, todo es una expresión, es decir, todo tiene un valor inmutable.</description></item></channel></rss>