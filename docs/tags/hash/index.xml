<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hash on The Dojo MX Blog</title><link>https://blog.thedojo.mx/tags/hash/</link><description>Recent content in Hash on The Dojo MX Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Mon, 28 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.thedojo.mx/tags/hash/index.xml" rel="self" type="application/rss+xml"/><item><title>Las tres garantías de seguridad de un hash</title><link>https://blog.thedojo.mx/2023/08/28/las-tres-garant%C3%ADas-de-seguridad-de-un-hash/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2023/08/28/las-tres-garant%C3%ADas-de-seguridad-de-un-hash/</guid><description>En este artículo profundizaremos sobre las garantías de seguridad mínimas que una función hash debe cumplir para ser criptográficamente segura. En un artículo anterior: ¿Qué es un hash? ya hablamos más detalladamente de la definición y de los algoritmos que puedes usar aún hoy de manera segura.
Empecemos por una pequeña definición de lo que es una función hash en la criptografía.
¿Qué es un hash? Un hash es una función que te devuelve un valor de tamaño fijo independientemente del tamaño de la entrada, esto implica una compresión de datos.</description></item><item><title>Crea hashes resistentes a balas con Keccak (SHA-3)</title><link>https://blog.thedojo.mx/2022/10/12/crea-hashes-resistentes-a-balas-con-keccak-sha-3/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2022/10/12/crea-hashes-resistentes-a-balas-con-keccak-sha-3/</guid><description>Ya hemos hablado en este blog de lo que es un hash e incluso qué hashes puedes usar para guardar tus passwords de manera segura.
En este artículo vamos a hablar de uno en específico, el que estamos seguros que deberías usar para cualquier uso futuro en tus programas y sistemas, el que ha sido nombrado como el Secure Hash Algorithm 3 (SHA-3): Keccak.
¿Qué es Keccak? Keccak es una familia de funciones, creadas para cubrir la necesidad de un sucesor de la versión 2 del Secure Hash Algorithm, que tiene algunas limitaciones y vulnerabilidades (por ejemplo, el ataque de extensión de longitud).</description></item><item><title>Algoritmos criptográficos: hashes seguros para alamcenar passwords</title><link>https://blog.thedojo.mx/2021/12/03/algoritmos-criptogr%C3%A1ficos-hashes-seguros-para-alamcenar-passwords/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2021/12/03/algoritmos-criptogr%C3%A1ficos-hashes-seguros-para-alamcenar-passwords/</guid><description>Una práctica común para solucionar la identificación de usuarios es registrarlos con su nombre de usuario y contraseña. Para no almacenar su contraseña directamente, es una costumbre hashearla. Como aprendiste en el artículo anterior, un hash es una función que impide recuperar el valor original ya que simplemente la información se pierde.
Los hashes seguros hacen casi imposible encontrar una colisión (que dos passwords te devuelvan un mismo hash), por lo que parecerían una buena solución para crear un valor único para cada usuario.</description></item><item><title>Algoritmos criptográficos: ¿Qué es un Hash?</title><link>https://blog.thedojo.mx/2021/12/02/algoritmos-criptogr%C3%A1ficos-qu%C3%A9-es-un-hash/</link><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2021/12/02/algoritmos-criptogr%C3%A1ficos-qu%C3%A9-es-un-hash/</guid><description>Dentro del mundo del desarrollo se escucha bastante sobre funciones hash y, en realidad, se usan para múltiples cosas. En este artículo vamos a hablar de lo que es una función hash, los diferentes tipos que hay y cómo pueden servirte para desarrollar software.
¿Qué es un función hash? La idea y el nombre de un función hash viene de la cocina: hash se traduce literalmente como &amp;ldquo;picadillo&amp;rdquo;, y se usa precisamente porque eso hace una función hash con los datos que le pasemos.</description></item></channel></rss>