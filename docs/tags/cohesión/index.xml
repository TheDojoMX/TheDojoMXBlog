<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cohesión on The Dojo MX Blog</title><link>https://blog.thedojo.mx/tags/cohesi%C3%B3n/</link><description>Recent content in Cohesión on The Dojo MX Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sun, 05 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.thedojo.mx/tags/cohesi%C3%B3n/index.xml" rel="self" type="application/rss+xml"/><item><title>Entendiendo la cohesión y el acoplamiento en el software</title><link>https://blog.thedojo.mx/2021/12/05/entendiendo-la-cohesi%C3%B3n-y-el-acoplamiento-en-el-software/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2021/12/05/entendiendo-la-cohesi%C3%B3n-y-el-acoplamiento-en-el-software/</guid><description>Siempre se dice que una buena base de código tiene alta cohesión, pero bajo acoplamiento. ¿Cómo se puede entender esto? ¿Cómo podemos llevar este principio a la práctica?
En este artículo vamos a definir cada uno de esos términos de manera sencilla, y con ejemplos de cómo llegar a la aplicación real de estos términos.
Un poco de historia Estos dos conceptos y otros relacionados fueron desarrollados por Larry Constantine en la década de los 60&amp;rsquo;s y publicados en los años siguientes, junto con el nacimiento del diseño estructurado de sistemas.</description></item></channel></rss>