<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cliente-Servidor on The Dojo MX Blog</title><link>https://blog.thedojo.mx/tags/cliente-servidor/</link><description>Recent content in Cliente-Servidor on The Dojo MX Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 04 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.thedojo.mx/tags/cliente-servidor/index.xml" rel="self" type="application/rss+xml"/><item><title>Entendiendo REST: Arquitectura cliente-servidor</title><link>https://blog.thedojo.mx/2019/07/04/entendiendo-rest-arquitectura-cliente-servidor/</link><pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2019/07/04/entendiendo-rest-arquitectura-cliente-servidor/</guid><description>El propósito de construir software no es crear una topología de interacciones específicas, o usar un tipo particular de componente; es crear un sistema que cumpla y exceda las necesidades de la aplicación. - Thomas Fielding
Ya hablamos de las motivaciones detrás del estilo arquitectural REST{:taget=blank}. Ahora empecemos con la primera de sus características o restricciones, que la empieza a definir: la arquitectura cliente-servidor.
¿Qué es la arquitectura cliente-servidor? Esta arquitectura de aplicación divide un sistema en dos componentes:</description></item></channel></rss>