<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Problem-Solving on The Dojo MX Blog</title><link>https://blog.thedojo.mx/tags/problem-solving/</link><description>Recent content in Problem-Solving on The Dojo MX Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 14 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.thedojo.mx/tags/problem-solving/index.xml" rel="self" type="application/rss+xml"/><item><title>Inducción y Deducción para desarrolladores de software</title><link>https://blog.thedojo.mx/2019/12/14/inducci%C3%B3n-y-deducci%C3%B3n-para-desarrolladores-de-software/</link><pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2019/12/14/inducci%C3%B3n-y-deducci%C3%B3n-para-desarrolladores-de-software/</guid><description>Este es el tercer artículo acerca del libro &amp;ldquo;How to Solve It&amp;rdquo; de George Polya. Puedes ver los dos artículos anteriores aquí:
Técnicas para resolver problemas Heurística Con este artículo cerraremos con las ideas que George Polya desarrolló para resolver problemas.
Deducción Tratar de resolver problemas por deducción significa aplicar principios o conocimiento general a un caso específico. Por ejemplo para un problema práctico en el que tenemos encontrar la longitud de un cable tensor para una antena, sabemos que podemos aplicar el teorema de Pitágoras.</description></item></channel></rss>