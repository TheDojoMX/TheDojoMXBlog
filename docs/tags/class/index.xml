<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Class on The Dojo MX Blog</title><link>https://blog.thedojo.mx/tags/class/</link><description>Recent content in Class on The Dojo MX Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 02 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.thedojo.mx/tags/class/index.xml" rel="self" type="application/rss+xml"/><item><title>A Philosophy of Software Design: Crea módulos de propósito general</title><link>https://blog.thedojo.mx/2020/04/02/a-philosophy-of-software-design-crea-m%C3%B3dulos-de-prop%C3%B3sito-general/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.thedojo.mx/2020/04/02/a-philosophy-of-software-design-crea-m%C3%B3dulos-de-prop%C3%B3sito-general/</guid><description>Una burla común hacia los programadores es que todo lo queremos hacer demasiado general. Nos piden una funcionalidad y en ese momento empezamos a pensar en todos los casos en los que podría ser usado en el universo.
Hay muchos consejos en contra de escribir código que abarque muchos casos. En este artículo vamos a hablar de las ventajas y desventajas de módulos de propósito general, es decir, vamos a hablar en contra de la sabiduría popular.</description></item></channel></rss>