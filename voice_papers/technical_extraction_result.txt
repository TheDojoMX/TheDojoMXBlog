A continuación se presenta la extracción técnica objetiva de todo el conocimiento explícito del contenido "Why I'm Betting Against AI Agents in 2025 (Despite Building Them)" en español:

────────────────────────────  
I. Título, Resumen y Declaraciones Principales

• Título y declaración principal:  
  - “Why I'm Betting Against AI Agents in 2025 (Despite Building Them)”  
    - Se afirma que, aunque se han construido múltiples sistemas de agentes de AI en producción, la concepción actual de agentes autónomos es matemáticamente inviable a escala de producción.  
    - Se establece que lo que funciona en producción no es el agente autónomo completo que se suele reclamar.

• TLDR (Resumen):
  - Las implementaciones actuales de agentes de AI están limitadas por restricciones de confiabilidad matemática, ineficiencias económicas y desafíos de integración.
  - Los sistemas de producción requieren operaciones precisas y acotadas con supervisión humana en lugar de flujos de trabajo autónomos de cadena larga.
  - Se plantea que el éxito futuro radica en construir herramientas específicas de dominio y acotadas que combinen AI para tareas complejas con fundamentos de ingeniería tradicionales robustos.

────────────────────────────  
II. Experiencia y Ejemplos de Sistemas en Producción

• Experiencia acumulada en sistemas de producción:  
  - Se han construido más de una docena de sistemas de agentes en producción en diversos dominios.

• Agentes de Desarrollo:
  - Generadores de UI: creadores de componentes React funcionales a partir de lenguaje natural.
  - Agentes de refactorización de código: encargados de modernizar bases de código heredado.
  - Generadores de documentación: mantienen automáticamente la documentación de las API.
  - Generadores de funciones: convierten especificaciones en implementaciones funcionales.

• Agentes de Datos e Infraestructura:
  - Agentes para operaciones en bases de datos que gestionan consultas complejas y migraciones.
  - Sistemas de automatización DevOps que gestionan infraestructura como código en múltiples proveedores de nube.

• Agentes de Calidad y Procesos:
  - Pipelines de CI/CD que:
    • Corrigen problemas de linting.
    • Generan suites de pruebas comprensivas.
    • Realizan revisiones automatizadas de código.
    • Crean pull requests detallados.

────────────────────────────  
III. Verdades Difíciles y Realidades Matemáticas

• Combinación de errores en flujos de trabajo de múltiples pasos:  
  - Se utiliza un ejemplo de flujo de trabajo con un 95% de confiabilidad por paso:
    ▪ En un flujo de 5 pasos, se alcanza aproximadamente un 77% de éxito.
    ▪ En un flujo de 10 pasos, el éxito es de cerca del 59%.
    ▪ En un flujo de 20 pasos, se reduce aproximadamente a un 36% de éxito.
  - Incluso con una hipótesis de 99% de confiabilidad por paso, en 20 pasos se lograría apenas un 82% de éxito.
  - Se destaca que los sistemas de producción requieren una confiabilidad del 99.9% o mayor.
  - Ejemplo práctico:  
    ▪ Un agente DevOps se diseña no como una cadena larga de 20 pasos sino como 3–5 operaciones discretas y verificables que incluyen puntos de reversión y, en ocasiones, confirmación humana.

• Economía de tokens en agentes conversacionales:
  - Los contextos de interacción conducen a un escalado cuadrático en el costo de los tokens.
  - En un agente conversacional, cada nueva interacción requiere procesar todo el contexto previo.
  - Se ejemplifica que una conversación de 100 turnos puede costar entre $50 y $100, resultando económicamente inviable a escala.
  - Ejemplo:  
    ▪ Un prototipo de agente de base de datos conversacional mostró que cada respuesta se volvía progresivamente más costosa, superando el valor entregado.

• Herramientas de ingeniería y sistemas de retroalimentación:
  - Se describe el desafío en el diseño de herramientas y sistemas de retroalimentación para un uso efectivo de los agentes.
  - Los sistemas exitosos utilizan:
    ▪ Contextos acotados.
    ▪ Operaciones verificables.
    ▪ Puntos de decisión con intervención humana cuando es necesario.
  - El diseño de herramientas aborda:
    ▪ Comunicación de éxitos parciales.
    ▪ Control en la cantidad de datos contextuales (por ejemplo, abstraer resultados de consultas extensas).
    ▪ Manejo de operaciones interdependientes (transacciones de base de datos, bloqueos de archivos, dependencias de recursos).
  - Se estima que aproximadamente el 30% del trabajo es realizado por AI, mientras que el 70% se dedica a la ingeniería de herramientas (interfaces de retroalimentación, gestión de contexto, manejo de fallos parciales y mecanismos de recuperación).

────────────────────────────  
IV. Desafíos de Integración

• Desafíos de integración en sistemas empresariales:
  - Los sistemas empresariales presentan peculiaridades heredadas, flujos de autenticación complejos, límites variables de tasa y problemas de cumplimiento normativo.
  - Ejemplo:  
    ▪ Un agente de base de datos no solo ejecuta consultas, sino que además gestiona:
      • Agrupación de conexiones (connection pooling).
      • Reversiones de transacciones.
      • Réplicas de solo lectura.
      • Límites de tiempo en consultas (query timeouts).
      • Registro de auditoría.
  - Según el contenido, se desafía la afirmación de que agentes autónomos pueden integrarse sin esfuerzo a pilas tecnológicas completas.

────────────────────────────  
V. Qué Funciona en Producción

• Sistemas que operan efectivamente en producción utilizan una combinación de:
  - AI para manejar complejidades.
  - Ingeniería tradicional para garantizar la confiabilidad.

• Ejemplos por dominio:
  - Generación de UI:  
    ▪ La AI genera interfaces, pero los humanos revisan antes de desplegar.
  - Operaciones en bases de datos:  
    ▪ La AI traduce requerimientos a SQL, pero los humanos confirman acciones destructivas.
  - Generación de funciones:  
    ▪ Se opera dentro de un esquema claramente definido ("descripción → función → finalizado").
  - Automatización DevOps:  
    ▪ Se generan infraestructuras como código con revisión, control de versiones y capacidad de reversión.
  - Pipelines de CI/CD:  
    ▪ La AI sugiere correcciones, mientras que los pipelines imponen criterios de éxito claros y mecanismos de reversión.

────────────────────────────  
VI. Predicciones para 2025

• Predicciones señaladas en el contenido:
  - Startups financiadas por capital de riesgo que ofrecen soluciones de "agentes totalmente autónomos" enfrentarán barreras económicas al pasar de demostraciones exitosas en flujos cortos (por ejemplo, 5 pasos) a procesos complejos de 20 o más pasos.
  - Empresas de software empresarial que incorporen agentes de AI a productos existentes tendrán dificultades, ya que sus agentes no lograrán integrarse lo suficientemente profundo para manejar flujos de trabajo reales.

────────────────────────────  
VII. Principios Estratégicos y Direcciones Futuras

• Estrategias y principios para equipos:
  - Se afirma que los equipos exitosos construirán herramientas acotadas y específicas de dominio que aprovechen la AI para aspectos complejos, manteniendo el control humano o delimitando estrictamente las decisiones críticas.
  - Se enfatiza la creación de “asistentes extremadamente capaces con límites claros” en lugar de perseguir “todo autónomo.”

• Declaraciones adicionales:
  - Se diferencia entre la AI que muestra buenos resultados en demostraciones y la que opera de manera confiable en la producción; se advierte que las empresas incurrirán en costos significativos al aprender esta distinción.
  - Se menciona que la estrategia no es apostar contra la AI en sí, sino contra el enfoque actual de la arquitectura de agentes, sugiriendo que el potencial futuro es mucho más valioso que el hype presente.

• Principios esenciales planteados:
  - Definir límites claros: especificar lo que el agente puede hacer en contraposición a lo que es manejado por humanos o sistemas deterministas.
  - Diseñar para el fallo: planificar para el 20–40% de los casos donde la AI se equivoca, incluyendo mecanismos de reversión.
  - Resolver la economía: evaluar el costo de cada interacción y entender la escalabilidad, observando que diseños sin estado (stateless) a menudo superan a los que mantienen estado (stateful).
  - Priorizar la confiabilidad sobre la autonomía: los usuarios confían más en herramientas que funcionan consistentemente que en sistemas que ocasionalmente tienen un rendimiento excepcional.
  - Basarse en fundamentos sólidos: usar la AI para tareas difíciles (como entender intenciones o generar contenido) y apoyarse en la ingeniería de software tradicional para la ejecución, manejo de errores y gestión del estado.

• Perspectiva general:
  - Se indica que la revolución de los agentes no se parecerá a las promesas actuales para 2025, sino que tendrá éxito al adoptar un enfoque práctico diferente.
  - Se destaca la brecha significativa entre las soluciones que “funcionan en demo” y aquellas que “funcionan a escala”.
  - Se señala que los desafíos en la confiabilidad de los agentes, la optimización de costos y la complejidad de integración continúan siendo problemas relevantes.
  - Según el contenido, los ingenieros y equipos enfrentan problemas complejos como decisiones de “construir vs. comprar” y la depuración de problemas en producción con agentes.
  - Se extiende una invitación a conversaciones adicionales sobre estos desafíos, incluyendo la provisión de datos de contacto para discusiones más profundas.
  - Se menciona que existen más perspectivas disponibles mediante suscripción a futuros artículos sobre ingeniería de AI, herramientas de desarrollo y lecciones aprendidas en la construcción de sistemas de producción.

────────────────────────────  
Datos Cuantitativos y Específicos (Números y Porcentajes)

• Confiabilidad por paso en flujos de trabajo:
  - 95% de confiabilidad:  
    ▪ Flujo de 5 pasos: ≈77% de éxito.  
    ▪ Flujo de 10 pasos: ≈59% de éxito.  
    ▪ Flujo de 20 pasos: ≈36% de éxito.
  - Confiabilidad hipotética del 99%:
    ▪ Flujo de 20 pasos: ≈82% de éxito.
  - Requerimiento de producción: ≥99.9% de confiabilidad.

• Economía en agentes conversacionales:
  - Una conversación con 100 turnos: costo entre $50 y $100.

• Distribución del trabajo en herramientas de feedback:
  - Aproximadamente 30% del trabajo realizado por AI.
  - Aproximadamente 70% del trabajo dedicado a la ingeniería de herramientas (interfaces, gestión de contexto, manejo de fallos y recuperación).

────────────────────────────  
Atribuciones de Opiniones y Declaraciones

• Opiniones y afirmaciones atribuidas al autor:
  - “Según el contenido...” se utiliza para calificar afirmaciones sobre las limitaciones y desafíos de los agentes autónomos.
  - “El autor afirma...” se utiliza para enunciar la apuesta contra el enfoque actual de los agentes autónomos en producción.
  - Se establece que, en opinión del autor, el futuro valor se encuentra en herramientas acotadas y específicas de dominio y no en soluciones “autónomas” que se presentan en las demos.

Esta es toda la información extraída objetivamente, con datos, conceptos, ejemplos, procesos, declaraciones y opiniones atribuidas según lo presentado en el contenido original.